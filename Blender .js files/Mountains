<html>
    <head>
        <title>Banded Sphere</title>
        <script src="libs/three.js"></script>
        <style>
            body {
                margin: 0;
                overflow: hidden;
            }
        </style>
    </head>
    <body onresize="onResize()">
        <div id="output"></div>
        <script>
            var scene = new THREE.Scene();
            var camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 1000);
            camera.position.set(0, 0, 100);
            
            camera.lookAt(new THREE.Vector3(0, 0, 0));
            var renderer = new THREE.WebGLRenderer();
            renderer.setSize(window.innerWidth, window.innerHeight);
            renderer.setClearColor(new THREE.Color(0x000000));
            document.getElementById("output").appendChild(renderer.domElement);

            var spotLight = new THREE.SpotLight(0xcccccc);
            spotLight.position.set(camera.position.x, camera.position.y, camera.position.z);
            scene.add(spotLight);

            var ambLight = new THREE.AmbientLight(0x050505);
            scene.add(ambLight);
    
//----------------------------------Model--------------------------------
            var loader= new THREE.JSONLoader();
            var model;
            loader.load('ProjectWithCube.js', function(geom,mats){
                var materials = new THREE.MeshFaceMaterial(mats);
                model = new THREE.Mesh(geom, materials);
                model.scale.x = model.scale.y = model.scale.z = 100;
                scene.add(model);
            });
//-----------------------------------------------------------------------
            

            renderScene();

            function onResize() {
                camera.aspect = window.innerWidth / window.innerHeight;
                camera.updateProjectionMatrix();
                renderer.setSize(window.innerWidth, window.innerHeight);
            }

            function renderScene() {
                if(model && model.position.z!=0) {
                    model.position.z = model.position.z + 10;
                }
                if(model && model.position.z==0) {
                    model.rotateY(.01);
                }
                renderer.render(scene, camera);
                requestAnimationFrame(renderScene);
            }

            function onKeyDown(event) {
//              console.log(event.which);
                switch (event.which) {
                    case 39: sphere.rotateY(0.04); break;    // angleY += 0.01
                    case 37: sphere.rotateY(-0.04); break;       // angleY -= 0.01
                    case 40: sphere.rotateX(0.04); break;
                    case 38: sphere.rotateX(-0.04); 
                }
            }
            window.addEventListener('resize', onResize, false);
            window.addEventListener('keydown', onKeyDown, false);
        </script>
    </body>
</html>